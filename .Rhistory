geom_density() +
facet_wrap(~model, scales = "free") +
geom_vline(xintercept = 10, color = "red")
# what models show differences?
fit_tab2 %>%
filter(dif_bic > 10) %>%
View()
# what models show differences?
fit_tab2 %>%
filter(dif_bic > 10) %>%
count(group, model)
# distribution of delta bic
fit_tab2 %>%
filter(warning == F) %>%
filter(model != "config") %>%
filter(dif_bic > 0) %>% # keep only positive delta bic to help reading
ggplot(aes(dif_bic)) +
geom_density() +
facet_wrap( ~ model, scales = "free") +
geom_vline(xintercept = 10, color = "red")
# what models show differences?
fit_tab2 %>%
filter(warning == F) %>%
filter(dif_bic > 10) %>%
count(group, model)
fit_tab2
res_s[[1]]
fit_tab2 %>% View
fit_tab2 %>% View()
fit_tab2
View(fit_tab2)
# how big is the difference in coefficients?
res[[3]]
# how big is the difference in coefficients?
res[[4]]
# how big is the difference in coefficients?
res[[4]]$parameters
# how big is the difference in coefficients?
res[[4]]$parameters$unstandardized %>%
tbl_df() %>%
filter(str_detect(paramHeader, c("WITH", "Variance")))
# how big is the difference in coefficients?
res[[4]]$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")))
# how big is the difference in coefficients?
res[[4]]$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances"))
# how big is the difference in coefficients?
res[[4]]$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, param)) %>%
select(nms, est, LatentClass)
# how big is the difference in coefficients?
res[[4]]$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms)
# how big is the difference in coefficients?
res[[4]]$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms, names_from = LatentClass)
# how big is the difference in coefficients?
res[[4]]$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms,
names_from = LatentClass,
values_from = est)
# how big is the difference in coefficients?
res[[4]]$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms,
names_from = LatentClass,
values_from = est, names_prefix = "est")
# how big is the difference in coefficients?
res[[4]]$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms,
names_from = LatentClass,
values_from = est, names_prefix = "est_")
# how big is the difference in coefficients?
res[[4]]$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, ".", param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms,
names_from = LatentClass,
values_from = est, names_prefix = "est_")
res[[4]] %>%
.$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, ".", param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms,
names_from = LatentClass,
values_from = est, names_prefix = "est_")
res[[4]] %>%
.[]$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, ".", param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms,
names_from = LatentClass,
values_from = est, names_prefix = "est_")
res[[4]] %>%
.[[]]$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, ".", param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms,
names_from = LatentClass,
values_from = est, names_prefix = "est_")
res[[4]] %>%
.data$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, ".", param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms,
names_from = LatentClass,
values_from = est, names_prefix = "est_")
res[[4]] %>%
.$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, ".", param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms,
names_from = LatentClass,
values_from = est, names_prefix = "est_")
res[[4]] %>%
.[]$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, ".", param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms,
names_from = LatentClass,
values_from = est, names_prefix = "est_")
res[[4]] %>%
.data[]$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, ".", param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms,
names_from = LatentClass,
values_from = est, names_prefix = "est_")
res[[4]] %>%
.data$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, ".", param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms,
names_from = LatentClass,
values_from = est, names_prefix = "est_")
res[[4]] %>%
.["parameters"]$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, ".", param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms,
names_from = LatentClass,
values_from = est, names_prefix = "est_")
res[[4]] %>%
.data["parameters"]$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, ".", param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(id_cols = nms,
names_from = LatentClass,
values_from = est, names_prefix = "est_")
res[[4]] %>%
.data["parameters"]
get_vars <- function(output) {
output$parameters$unstandardized %>%
tbl_df() %>%
filter(paramHeader %in% c("S.WITH", "Variances")) %>%
mutate(nms = str_c(paramHeader, ".", param)) %>%
select(nms, est, LatentClass) %>%
pivot_wider(
id_cols = nms,
names_from = LatentClass,
values_from = est,
names_prefix = "est_"
)
}
get_vars(res[[4]])
res[[1]]$model$summaries$Filename
res[[1]]
attributes(res[[1]])
attributes(res[[1]])$filename
seq_along(res)
for (i in seq_along(res)) {
names(res[[i]]) <- attributes(res[[i]])$filename
}
names(res)
for (i in seq_along(res)) {
names(res[i]) <- attributes(res[[i]])$filename
}
names(res)
res
# run in different folder for space issues
folder <- "./mplus/"
out_path <- list.files(folder, pattern = "out", full.names = T)
res <- map(out_path, readModels)
wide_data6
wide_data6$fiyrdia_9 %>% qplot()
wide_data6$fiyrdia_10 %>% qplot()
wide_data6$fiyrdia_8 %>% qplot()
wide_data6$fiyrdia_7 %>% qplot()
wide_data6$fiyrdia_6 %>% qplot()
wide_data6$fiyrdia_5 %>% qplot()
qplot(wide_data6$fiyrdia_7, wide_data6$fiyrdia_8)
qplot(wide_data6$fiyrdia_7)
qplot(wide_data6$fiyrdia_7, wide_data6$fiyrdia_8)
dim(fit_tab)
318/8
lengt(res)
length(res)
328/8
# run in different folder for space issues
folder <- "./mplus/"
out_path <- list.files(folder, pattern = "out", full.names = T)
res <- map(out_path, readModels)
res[[1]]$model$summaries$Filename
res[[1]]
attributes(res[[1]])$filename
attributes(res[[1]])
res[[1]]$model$summaries$Filename %>% str_remove("\\./mplus/|\\out")
res[[1]]$model$summaries$Filename %>% str_remove_all("\\./mplus/")
res[[1]]$model$summaries$Filename %>% str_remove_all("\\.\/mplus\/")
res[[1]]$model$summaries$Filename %>% str_remove_all("/mplus/")
res[[1]]$model$summaries$Filename
attributes(res[[1]])$filename %>% str_remove_all("/mplus/")
attributes(res[[1]])$filename %>% str_remove_all("\\./mplus/")
attributes(res[[1]])$filename %>% str_remove_all("\\./mplus/|\\out")
attributes(res[[1]])$filename %>% str_remove_all("\\./mplus/|\\.out")
names(res[1])
names(res[1]) <- attributes(res[[1]])$filename %>%
str_remove_all("\\./mplus/|\\.out")
res[[1]]
res[1]
res[1]
attributes(res[[1]])$filename %>%
str_remove_all("\\./mplus/|\\.out")
res["wide_data6_aidxhh_mm_config"]
names(res[[1]]) <- attributes(res[[1]])$filename %>%
str_remove_all("\\./mplus/|\\.out")
res["wide_data6_aidxhh_mm_config"]
res[["wide_data6_aidxhh_mm_config"]]
1
res[1]
res[1] <- readModels(out_path[1])
res[1]
res[[1]]
res[[1]]
res[1]
res[1]
names(res[1]) <- test
res$test
names(res[1]) <- "test"
res$test
res[1]
res[1]
names(res[[1]]) <- "test"
res[1]
res[[1]]$test
res[1] <- readModels(out_path[1])
# read fit indices for MLR
read_fit_mlr <- function(model) {
fit <- model$summaries
indices <- c("Filename", "Observations",
"LL",
"Parameters",
"AIC", "BIC")
# if ("ChiSqDiffTest_Value" %in% names(fit)) {
#   indices <- c(indices, "ChiSqDiffTest_Value", "ChiSqDiffTest_DF",
#                "ChiSqDiffTest_PValue")
# }
fit[indices]
}
# get indicator if they converged
# use AIC for MLR or CFI for ML
#
converged <- res %>%
map(function(x) x$summaries %>%
names %in% "AIC" %>% sum() > 0) %>%
unlist()
table(converged) # 10 models did not converge
warning <- res %>%
map(function(x) x$warnings %>% length() > 3) %>%
unlist()
table(warning)
names(res[[1]]$summaries$Filename)
all_models <- map(res, function(x) x$summaries$Filename) %>%
reduce(rbind) %>% as.data.frame() %>% tbl_df() %>%
cbind(converged, warning) %>%
tbl_df() %>% rename(Filename = V1)
filter(all_models, converged == F) %>% print(n = 25)
all_models <- map(res, function(x) x$summaries$Filename) %>%
reduce(rbind) %>% as.data.frame() %>% tbl_df() %>%
cbind(converged, warning) %>%
tbl_df() %>% rename(Filename = V1)
map(res, function(x) x$summaries$Filename)
map(res, function(x) x$summaries$Filename) %>%
reduce(rbind) %>% as.data.frame() %>% tbl_df()
warning
table(converged) # 10 models did not converge
table(converged) # 9 models did not converge
map(res, function(x) x$summaries$Filename) %>%
reduce(rbind) %>% as.data.frame() %>% tbl_df()
map(res, function(x) x$summaries$Filename)
map(res, function(x) x$summaries$Filename) %>%
reduce(rbind)
map(res, function(x) x$summaries$Filename) %>%
reduce(rbind) %>% as.data.frame()
# run in different folder for space issues
folder <- "./mplus/"
out_path <- list.files(folder, pattern = "out", full.names = T)
out_path
res <- map(out_path, readModels)
# read fit indices for MLR
read_fit_mlr <- function(model) {
fit <- model$summaries
indices <- c("Filename", "Observations",
"LL",
"Parameters",
"AIC", "BIC")
# if ("ChiSqDiffTest_Value" %in% names(fit)) {
#   indices <- c(indices, "ChiSqDiffTest_Value", "ChiSqDiffTest_DF",
#                "ChiSqDiffTest_PValue")
# }
fit[indices]
}
# get indicator if they converged
# use AIC for MLR or CFI for ML
#
converged <- res %>%
map(function(x) x$summaries %>%
names %in% "AIC" %>% sum() > 0) %>%
unlist()
table(converged) # 9 models did not converge
table(converged) # 8 models did not converge
warning <- res %>%
map(function(x) x$warnings %>% length() > 3) %>%
unlist()
table(warning)
all_models <- map(res, function(x) x$summaries$Filename) %>%
reduce(rbind) %>% as.data.frame() %>% tbl_df() %>%
cbind(converged, warning) %>%
tbl_df() %>% rename(Filename = V1)
filter(all_models, converged == F) %>% print(n = 25)
filter(all_models, warning == T) %>% print(n = 25)
View(all_models)
res[[67]]
res[[67]][[7]]
res[[67]]$errors
res[[67]]$warnings
res[[67]]$warnings %>% map(str_detect, "Not REPLICATE")
res[[67]]$warnings %>% map(str_detect, "NOT REPLICATE")
res[[67]]$warnings %>% map(str_detect, "NOT REPLICATE") %>% map(sum)
res[[67]]$warnings %>% map(str_detect, "NOT REPLICATE") %>% map(sum) %>% reduce(sum)
warning <- res %>%
map(function(x) x$warnings %>% map(str_detect, "NOT REPLICATE") %>%
map(sum) %>%
reduce(sum)> 0) %>%
unlist()
table(warning)
warning <- res %>%
map(function(x) x$warnings %>% map(str_detect, "SADDLE") %>%
map(sum) %>%
reduce(sum)> 0) %>%
unlist()
table(warning)
all_models <- map(res, function(x) x$summaries$Filename) %>%
reduce(rbind) %>% as.data.frame() %>% tbl_df() %>%
cbind(converged, warning) %>%
tbl_df() %>% rename(Filename = V1)
filter(all_models, converged == F) %>% print(n = 25)
filter(all_models, warning == T) %>% print(n = 25)
# run in different folder for space issues
folder <- "./mplus/"
out_path <- list.files(folder, pattern = "out", full.names = T)
res <- map(out_path, readModels)
# read fit indices for MLR
read_fit_mlr <- function(model) {
fit <- model$summaries
indices <- c("Filename", "Observations",
"LL",
"Parameters",
"AIC", "BIC")
# if ("ChiSqDiffTest_Value" %in% names(fit)) {
#   indices <- c(indices, "ChiSqDiffTest_Value", "ChiSqDiffTest_DF",
#                "ChiSqDiffTest_PValue")
# }
fit[indices]
}
# get indicator if they converged
# use AIC for MLR or CFI for ML
#
converged <- res %>%
map(function(x) x$summaries %>%
names %in% "AIC" %>% sum() > 0) %>%
unlist()
table(converged) # 8 models did not converge
warning <- res %>%
map(function(x) x$warnings %>% map(str_detect, "SADDLE") %>%
map(sum) %>%
reduce(sum)> 0) %>%
unlist()
table(warning)
all_models <- map(res, function(x) x$summaries$Filename) %>%
reduce(rbind) %>% as.data.frame() %>% tbl_df() %>%
cbind(converged, warning) %>%
tbl_df() %>% rename(Filename = V1)
filter(all_models, converged == F) %>% print(n = 25)
filter(all_models, warning == T) %>% print(n = 25)
# run in different folder for space issues
folder <- "./mplus/"
out_path <- list.files(folder, pattern = "out", full.names = T)
res <- map(out_path, readModels)
# read fit indices for MLR
read_fit_mlr <- function(model) {
fit <- model$summaries
indices <- c("Filename", "Observations",
"LL",
"Parameters",
"AIC", "BIC")
# if ("ChiSqDiffTest_Value" %in% names(fit)) {
#   indices <- c(indices, "ChiSqDiffTest_Value", "ChiSqDiffTest_DF",
#                "ChiSqDiffTest_PValue")
# }
fit[indices]
}
# get indicator if they converged
# use AIC for MLR or CFI for ML
#
converged <- res %>%
map(function(x) x$summaries %>%
names %in% "AIC" %>% sum() > 0) %>%
unlist()
table(converged) # 8 models did not converge
warning <- res %>%
map(function(x) x$warnings %>% map(str_detect, "SADDLE") %>%
map(sum) %>%
reduce(sum)> 0) %>%
unlist()
table(warning)
all_models <- map(res, function(x) x$summaries$Filename) %>%
reduce(rbind) %>% as.data.frame() %>% tbl_df() %>%
cbind(converged, warning) %>%
tbl_df() %>% rename(Filename = V1)
filter(all_models, converged == F) %>% print(n = 25)
filter(all_models, warning == T) %>% print(n = 25)
res_s <- res[converged]
fit_tab <- map_df(res[converged], read_fit_mlr)
fit_tab2 <- full_join(all_models, fit_tab, by = "Filename") %>%
tbl_df() %>%
mutate(name = str_remove_all(Filename, "wide_data6_|.out|mode_type_")) %>%
separate(name, into = c("var", "group","model")) %>%
mutate(model =
factor(model, levels = c("config", "mean", "var", "cor"))) %>%
arrange(var, group, model) %>%
group_by(var, group) %>%
mutate(dif_bic = lag(BIC) - BIC) %>%
ungroup() %>%
select(var, group, model, everything(), Filename) %>%
rename_all(~str_remove_all(., "ChiSqM_"))
# models with issues
fit_tab2 %>%
count(group, converged, warning)
# distribution of delta bic
fit_tab2 %>%
filter(warning == F) %>%
filter(model != "config") %>%
filter(dif_bic > 0) %>% # keep only positive delta bic to help reading
ggplot(aes(dif_bic)) +
geom_density() +
facet_wrap( ~ model, scales = "free") +
geom_vline(xintercept = 10, color = "red")
# what models show differences?
fit_tab2 %>%
filter(warning == F) %>%
filter(dif_bic > 10) %>%
count(group, model)
fit_tab2 %>%
filter(dif_bic > 10) %>%
View()
