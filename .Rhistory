dir.create("./output")
dir.create("./functions")
dir.create("./data")
install.packages("tidyverse", dep = T)
letters[5:10]
install.packages("tidyverse", dep = T)
pkg <- c("tidyverse",  "haven")
sapply(pkg, library, character.only = T)
# load local functions
map(str_c("./functions/",
list.files("./functions/")),
source)
# get list of variables of interest. just indresp for now
data_path <- list.files("./data/stata13/interest",
full.names = T)
data_path
# get list of variables of interest. just indresp for now
data_path <- list.files("./data/stata13/interest",
full.names = T)
# get list of variables of interest. just indresp for now
data_path <- list.files("./data/stata13/",
full.names = T)
# import data
raw_data_list <- map(data_path, read_dta)
# get list of variables of interest. just indresp for now
data_path <- list.files("./data/stata13/interest/",
full.names = T)
# import data
raw_data_list <- map(data_path, read_dta)
raw_data_list
# code missings
data_list1 <- map(raw_data_list, function(x) {
# code missings
data_list1 <- map(raw_data_list, function(x) {
x %>%
mutate_all(funs(ifelse(. < 0, NA, .)))
}
)
data_list1
miss_list <- map(data_list1, function(x) {
x %>%
transmute_all(funs(round(is.na(.)/NROW(), 2))) %>%
t()
})
miss_list <- map(data_list1, function(x) {
x %>%
transmute_all(funs(round(is.na(.)/NROW(.), 2))) %>%
t()
})
miss_list %>%
reduce(rbind) %>%
tbl_df()
data_list1[[1]]
nrow(data_list1[[1]]$e_cindtime)
NROW(data_list1[[1]]$e_cindtime)
data_list1
data_list1[[1]] %>%
transmute_all(funs(round(is.na(.)/NROW(.), 2)))
data_list1[[1]] %>%
summrise_all(funs(round(is.na(.)/NROW(.), 2)))
data_list1[[1]] %>%
summarise_all(funs(round(is.na(.)/NROW(.), 2)))
data_list1[[1]] %>%
summarise_all(funs(round(is.na(.)/NROW(), 2)))
data_list1[[1]]$e_manff
data_list1[[1]]$e_manff %>%
summarise_all(funs(round(is.na(.)/NROW(), 2)))
data_list1[[1]]$e_manff %>%
summarise_all(funs(round(is.na(.)/nrow(), 2)))
data_list1[[1]]$e_manff %>%
summarise_all(funs(round(is.na(.)/nrow(.), 2)))
data_list1[[1]]$e_manff %>%
summarise_all(funs(round(is.na(.)/n(), 2)))
data_list1[[1]]$e_manff %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2)))
data_list1[[1]]$e_manff %>%
summarise_all(funs(sum(is.na(.))))
data_list1[[1]][e_manff]
data_list1[[1]]["e_manff"]
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(sum(is.na(.))))
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(sum(is.na(.))/n()))
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(sum(round(is.na(.))/n()), 2))
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n()), 2))
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2)))
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t()
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t() %>%
mutate(var = rownames())
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t() %>%
mutate(var = rownames(.))
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t() %>%
mutate(var = row.names())
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t() %>%
mutate(var = row.names(.))
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t()
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t() %>% tbl_df() %>%
mutate(var = row.names(.))
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t() %>% tbl_df()
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t() %>%
mutate(var = row.names(.))
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t()
test <- data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t()
test
names(test0
names(test)
row.names(test)
test <- data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t() %>%
mutate(vars = row.names(.))
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t() %>% as.data.frame()
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t() %>% as.data.frame() %>%
mutate(vars = row.names(.))
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t() %>% as.data.frame() %>%
mutate(vars = row.names(.)) %>%
tbl_df() %>%
rename(prop_miss = V1)
data_list1[[1]]["e_manff"] %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t() %>% as.data.frame() %>%
mutate(vars = row.names(.)) %>%
tbl_df() %>%
rename(prop_miss = V1) %>%
select(vars, prop_miss)
miss_list <- map(data_list1, function(x) {
x %>%
summarise_all(funs(round(sum(is.na(.))/n(), 2))) %>%
t() %>% as.data.frame() %>%
mutate(vars = row.names(.)) %>%
tbl_df() %>%
rename(prop_miss = V1) %>%
select(vars, prop_miss)
})
miss_list
x %>%
summarise_all(funs(round(sum(is.na(.))/n(), 3) * 100)) %>%
t() %>% as.data.frame() %>%
mutate(vars = row.names(.)) %>%
tbl_df() %>%
rename(prop_miss = V1) %>%
select(vars, prop_miss)
miss_list <- map(data_list1, function(x) {
x %>%
summarise_all(funs(round(sum(is.na(.))/n(), 3) * 100)) %>%
t() %>% as.data.frame() %>%
mutate(vars = row.names(.)) %>%
tbl_df() %>%
rename(prop_miss = V1) %>%
select(vars, prop_miss)
})
miss_list
count(data_list1[[6]], j_chkwebsex )
count(raw_data_list[[6]], j_chkwebsex )
map(miss_list, function(x) {
x %>%
filter(prop_miss < 50)
})
str_detect("i_dsadsa_dv", "_dv$")
str_detect("i_dsadsa_dv", "_dv^")
map(miss_list, function(x) {
x %>%
filter(prop_miss < 50) %>%
filter(str_detect(vars, "_dv$"))
})
x %>%
filter(prop_miss < 50) %>%
filter(!str_detect(vars, "_dv$"))
map(miss_list, function(x) {
x %>%
filter(prop_miss < 50) %>%
filter(!str_detect(vars, "_dv$"))
})
letters[5-11]
letters[5:11]
map(miss_list, function(x) {
x %>%
filter(prop_miss < 50) %>%
filter(!str_detect(vars, "_dv$")) %>%
mutate(radical = str_remove(vars, "^letters[5:11]_"))
})
map(miss_list, function(x) {
x %>%
filter(prop_miss < 50) %>%
filter(!str_detect(vars, "_dv$")) %>%
mutate(radical = str_remove(vars, "^[letter]_"))
})
x %>%
filter(prop_miss < 50) %>%
filter(!str_detect(vars, "_dv$")) %>%
mutate(radical = str_remove(vars, "^[e-k]_"))
map(miss_list, function(x) {
x %>%
filter(prop_miss < 50) %>%
filter(!str_detect(vars, "_dv$")) %>%
mutate(radical = str_remove(vars, "^[e-j]_"))
})
map(miss_list, function(x) {
x %>%
filter(prop_miss < 50) %>% # get rid of variables with more than 50% miss
filter(!str_detect(vars, "_dv$")) %>% # delete dereived variables
mutate(radical = str_remove(vars, "^[e-j]_")) %>% #make var witout prefix
filter(radical %in% c("pidp", "pidp", "pno"))
})
map(miss_list, function(x) {
x %>%
filter(prop_miss < 50) %>% # get rid of variables with more than 50% miss
filter(!str_detect(vars, "_dv$")) %>% # delete dereived variables
mutate(radical = str_remove(vars, "^[e-j]_")) %>% #make var witout prefix
filter(!radical %in% c("pidp", "hidp", "pno"))
})
map(miss_list, function(x) {
x %>%
filter(prop_miss < 50) %>% # get rid of variables with more than 50% miss
filter(!str_detect(vars, "_dv$")) %>% # delete dereived variables
mutate(radical = str_remove(vars, "^[e-j]_")) %>% #make var witout prefix
filter(!radical %in% c("pidp", "hidp", "pno", "indmode"))
})
miss_list2 <- map(miss_list, function(x) {
x %>%
filter(prop_miss < 50) %>% # get rid of variables with more than 50% miss
filter(!str_detect(vars, "_dv$")) %>% # delete dereived variables
mutate(radical = str_remove(vars, "^[e-j]_")) %>% #make var witout prefix
filter(!radical %in% c("pidp", "hidp", "pno", "indmode"))
})
miss_list2 %>%
reduce(rbind)
miss_list2 <- map(miss_list, function(x) {
x %>%
filter(prop_miss < 50) %>% # get rid of variables with more than 50% miss
filter(!str_detect(vars, "_dv$")) %>% # delete dereived variables
mutate(radical = str_remove(vars, "^[e-j]_")) %>% #make var witout prefix
filter(!radical %in% c("pidp", "hidp", "pno", "indmode")) %>%
filter(!str_detect(vars, "^ff_")) %>% # delete expriment variables
})
miss_list2 <- map(miss_list, function(x) {
x %>%
filter(prop_miss < 50) %>% # get rid of variables with more than 50% miss
filter(!str_detect(vars, "_dv$")) %>% # delete dereived variables
mutate(radical = str_remove(vars, "^[e-j]_")) %>% #make var witout prefix
filter(!radical %in% c("pidp", "hidp", "pno", "indmode")) %>%
filter(!str_detect(vars, "^ff_")) # delete expriment variables
})
miss_list2
miss_list2 %>%
reduce(rbind) %>%
count(radical)
miss_list2 %>%
reduce(rbind) %>%
count(radical) %>%
filter(n > 2)
com_vars <- miss_list2 %>%
reduce(rbind) %>%
count(radical) %>%
filter(n > 2)
data_list1
letters[5:11]
letters[4 + i]
i <- 1
letters[4 + i]
str_c(letters[4 + i], "_", com_vars$radical)
data_list1 %>%
seelct(pidp, matches("hidp"))
data_list1[[1]] %>%
seelct(pidp, matches("hidp"))
data_list1[[1]] %>%
select(pidp, matches("hidp"))
vars <- str_c(letters[4 + i], "_", com_vars$radical)
data_list1[[1]] %>%
select(pidp, matches("hidp"), vars)
names(data_list1[[1]]) %in% vars
names(data_list1[[1]])[names(data_list1[[1]]) %in% vars]
vars_select <- names(data_list1[[1]])[names(data_list1[[1]]) %in% vars]
data_list1[[1]] %>%
select(pidp, matches("hidp"), vars_select)
i <- 1
map(data_list1, function(x) {
vars <- str_c(letters[4 + i], "_", com_vars$radical)
vars_select <- names(data_list1[[i]])[names(data_list1[[i]]) %in% vars]
out <- data_list1[[i]] %>%
select(pidp, matches("hidp"), vars_select)
i <<- i + 1
out
})
data_list2 <- map(data_list1, function(x) {
vars <- str_c(letters[4 + i], "_", com_vars$radical)
vars_select <- names(data_list1[[i]])[names(data_list1[[i]]) %in% vars]
out <- data_list1[[i]] %>%
select(pidp, matches("hidp"), vars_select)
i <<- i + 1
out
})
i <- 1
data_list2 <- map(data_list1, function(x) {
vars <- str_c(letters[4 + i], "_", com_vars$radical)
vars_select <- names(data_list1[[i]])[names(data_list1[[i]]) %in% vars]
out <- data_list1[[i]] %>%
select(pidp, matches("hidp"), vars_select)
i <<- i + 1
out
})
dir.create("./data/out")
save(data_list2, "./data/out/common_vars_data.RData")
save(data_list2, file = "./data/out/common_vars_data.RData")
load("./data/out/common_vars_data.RData")
